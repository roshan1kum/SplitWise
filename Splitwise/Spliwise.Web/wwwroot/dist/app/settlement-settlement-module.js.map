{"version":3,"sources":["./src/app/settlement/settlement/settlement.component.html","./src/app/Shared/SettlementData.ts","./src/app/settlement/settlement-routing.module.ts","./src/app/settlement/settlement.module.ts","./src/app/settlement/settlement/settlement.component.css","./src/app/settlement/settlement/settlement.component.ts"],"names":[],"mappings":"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","file":"settlement-settlement-module.js","sourcesContent":["export default \"<p>settlement works!</p>\\n\\n<form [formGroup]=\\\"profileForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n        <div class=\\\"panel-body\\\">\\n            <div class=\\\"form-group\\\">\\n                <label>\\n                Cost:\\n                <input type=\\\"number\\\" formControlName=\\\"Cost\\\">\\n                </label>\\n            </div>\\n           \\n            <div class=\\\"form-group\\\">\\n                    <label>\\n                    Date:\\n                    <input type=\\\"date\\\" formControlName=\\\"Date\\\">\\n                    </label>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n                    <label>\\n                      GroupName:\\n                      <select (change)=\\\"onChange($event.target.value)\\\"  class = \\\"form-control\\\"  formControlName=\\\"Group\\\">\\n                            <option value=\\\"\\\">No Group</option>\\n                            <option *ngFor = \\\"let grp of grpName\\\" [(ngValue)]=\\\"grp\\\"  [value]=\\\"grp.id\\\">{{grp.groupName}}</option>\\n                         </select>\\n                    </label>\\n            </div>\\n            <div class=\\\"form-group\\\" *ngIf='flag==\\\"Group\\\"'>\\n                    <label>\\n                            User1:\\n                            <select class = \\\"form-control\\\"  formControlName=\\\"User1\\\">\\n                                  <option *ngFor = \\\"let user of allUser\\\" [(ngValue)]=\\\"user\\\"  [value]=\\\"user.userId\\\">{{user.memberName}}</option>\\n                               </select>\\n                    </label>\\n            </div>\\n            <div class=\\\"form-group\\\" *ngIf='flag==\\\"Friends\\\"'>\\n                    <label>\\n                            User1:\\n                            <select class = \\\"form-control\\\"  formControlName=\\\"User1\\\">\\n                                  <option *ngFor = \\\"let user of FriendName\\\" [(ngValue)]=\\\"user\\\"  [value]=\\\"user.id\\\">{{user.name}}</option>\\n                               </select>\\n                    </label>\\n            </div>\\n            <label>Paid</label>\\n            <div class=\\\"form-group\\\" *ngIf='flag==\\\"Group\\\"'>\\n                    <label>\\n                            User2:\\n                            <select class = \\\"form-control\\\"  formControlName=\\\"User2\\\">\\n                                  <option *ngFor = \\\"let user of allUser\\\" [(ngValue)]=\\\"user\\\"  [value]=\\\"user.userId\\\">{{user.memberName}}</option>\\n                               </select>\\n                    </label>\\n            </div>\\n            <div class=\\\"form-group\\\" *ngIf='flag==\\\"Friends\\\"'>\\n                    <label>\\n                            User2:\\n                            <select class = \\\"form-control\\\"  formControlName=\\\"User2\\\">\\n                                  <option *ngFor = \\\"let user of FriendName\\\" [(ngValue)]=\\\"user\\\"  [value]=\\\"user.id\\\">{{user.name}}</option>\\n                               </select>\\n                    </label>\\n            </div>\\n\\n\\n         \\n            <div class=\\\"form-group\\\">\\n                    <button type=\\\"submit\\\" [disabled]=\\\"!profileForm.valid\\\">Submit</button>\\n            </div>\\n                \\n    \\n                    \\n                      \\n        </div>\\n</form>\"","export class SettlementData{\r\n    id:number;\r\n    yourId:string;\r\n    toId:string;\r\n    amount:string;\r\n    date:Date;\r\n    groupId:number;\r\n}","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { componentFactoryName } from '@angular/compiler';\nimport { SettlementComponent } from './settlement/settlement.component';\n\n\nconst routes: Routes = [\n  {\n    path:'',\n    component:SettlementComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class SettlementRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { SettlementRoutingModule } from './settlement-routing.module';\nimport { SettlementComponent } from './settlement/settlement.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n\n@NgModule({\n  declarations: [SettlementComponent],\n  imports: [\n    CommonModule,\n    SettlementRoutingModule,\n    FormsModule,\n    ReactiveFormsModule\n\n  ]\n})\nexport class SettlementModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NldHRsZW1lbnQvc2V0dGxlbWVudC9zZXR0bGVtZW50LmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { UserServiceService } from '../../user/user-service.service';\nimport { ApplicationUserAC } from '../../Shared/ApplicationUserAC';\nimport { Group } from 'src/app/Shared/Group';\nimport { GroupMemberDetailsAC } from 'src/app/Shared/GroupMemberDetailsAC';\nimport { SettlementData } from '../../Shared/SettlementData';\nimport {Location} from '@angular/common';\n\n\n@Component({\n  selector: 'app-settlement',\n  templateUrl: './settlement.component.html',\n  styleUrls: ['./settlement.component.css']\n})\nexport class SettlementComponent implements OnInit {\n  user:ApplicationUserAC;\n  grpName:Group[];\n  ID:number;\n  allUser:Array<GroupMemberDetailsAC>=[];\n  default: string = 'UK';\n  FriendName:ApplicationUserAC[];\n  flag:string=\"Friends\";\n  settlement:SettlementData;\n\n  constructor(private fb:FormBuilder,private service:UserServiceService,private _location: Location) {\n    this.FriendName=new Array<ApplicationUserAC>();\n    this.getCurrentUser();\n    this.settlement=new SettlementData();\n   }\n\n  profileForm:FormGroup;\n\n  ngOnInit() {\n    this.profileForm = this.fb.group({\n      Cost:[''],\n      Date:[''],\n      Group:[''],\n      User1:[''],\n      User2:['']\n    })\n  }\n  getCurrentUser(): void{\n    this.service.username().subscribe(u=>\n      {\n        this.user=u;\n        this.FriendName.push(this.user);\n        this.getGroups(this.user.id);\n        this.getFriend(this.user.id);\n      });\n    }\n    getGroups(id:string)\n    {\n      this.service.getallGroups(id).subscribe(res=>{\n        this.grpName=res;\n      })\n    }\n    onChange(id:number) {\n      this.ID=id;\n      this.allUser=new Array<GroupMemberDetailsAC>();\n      this.service.getallMembers(id).subscribe(res=>{\n        res.forEach(element => {\n          this.allUser.push(element);\n        });\n        // console.log(this.allUser);\n        if(this.allUser.length>0)\n        {\n          this.flag=\"Group\"\n        }\n        else{\n          this.flag=\"Friends\"\n        }\n      })\n  }\n  getFriend(id):void{\n    this.service.getFriend(id).subscribe(name=>{\n      name.forEach(element => {\n        this.FriendName.push(element);\n      });\n    });\n  }\n  onSubmit()\n  {\n    // console.log(this.profileForm.value)\n    this.settlement.amount=this.profileForm.get('Cost').value;\n    this.settlement.date=this.profileForm.get('Date').value\n    this.settlement.groupId=+this.profileForm.get('Group').value\n    this.settlement.yourId=this.profileForm.get('User1').value\n    this.settlement.toId=this.profileForm.get('User2').value\n    console.log(this.settlement);\n    this.service.Settlement(this.settlement).subscribe(res=>{\n      this._location.back();\n    });\n  }\n}\n"],"sourceRoot":"webpack:///"}