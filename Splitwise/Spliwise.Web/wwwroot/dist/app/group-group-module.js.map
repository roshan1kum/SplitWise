{"version":3,"sources":["./src/app/group/add-group-expense/add-group-expense.component.html","./src/app/group/add-group/add-group.component.html","./src/app/group/add-members/add-members.component.html","./src/app/group/edit-expense/edit-expense.component.html","./src/app/group/group-dashboard/group-dashboard.component.html","./src/app/group/showmembers/showmembers.component.html","./src/app/Shared/Group.ts","./src/app/Shared/GroupExpenseAC.ts","./src/app/Shared/GroupExpenseData.ts","./src/app/Shared/GroupMembersAC.ts","./src/app/group/add-group-expense/add-group-expense.component.css","./src/app/group/add-group-expense/add-group-expense.component.ts","./src/app/group/add-group/add-group.component.css","./src/app/group/add-group/add-group.component.ts","./src/app/group/add-members/add-members.component.css","./src/app/group/add-members/add-members.component.ts","./src/app/group/edit-expense/edit-expense.component.css","./src/app/group/edit-expense/edit-expense.component.ts","./src/app/group/group-dashboard/group-dashboard.component.css","./src/app/group/group-dashboard/group-dashboard.component.ts","./src/app/group/group-routing.module.ts","./src/app/group/group.module.ts","./src/app/group/showmembers/showmembers.component.css","./src/app/group/showmembers/showmembers.component.ts"],"names":[],"mappings":"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","file":"group-group-module.js","sourcesContent":["export default \"<p>add-group-expense works!</p>\\n\\n<form [formGroup]=\\\"profileForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n    <div class=\\\"panel-body\\\">\\n        <div class=\\\"form-group\\\">\\n            <label>\\n            Cost:\\n            <input type=\\\"number\\\" formControlName=\\\"Cost\\\">\\n            </label>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n                <label>\\n                Description:\\n                <input type=\\\"text\\\" formControlName=\\\"Description\\\">\\n                </label>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n                <label>\\n                Date:\\n                <input type=\\\"date\\\" formControlName=\\\"Date\\\">\\n                </label>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label>\\n                Split:\\n            </label>\\n            <input type=\\\"radio\\\" formControlName=\\\"Split\\\" value=\\\"equally\\\">Equally\\n            <input type=\\\"radio\\\" formControlName=\\\"Split\\\" value=\\\"Unequally\\\">Unequally\\n        </div> \\n        <div class=\\\"well\\\">\\n            <div formArrayName=\\\"MembersExpense\\\" *ngFor=\\\"let m of profileForm.get('MembersExpense').controls;let i=index\\\">\\n                <div [formGroupName]=\\\"i\\\">\\n                    <label>\\n                        Name\\n                    </label>\\n                        <input type =\\\"text\\\"  formControlName=\\\"Name\\\" >\\n                        <label>\\n                            Price\\n                        </label>            \\n                        <input type=\\\"number\\\"  formControlName=\\\"Price\\\">\\n                </div>\\n            </div>\\n            <button type=\\\"button\\\" (click)=\\\"AddMembers()\\\">Add Members</button>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n            <label>\\n              GroupName:\\n              <select (change)=\\\"onChange($event.target.value)\\\" class = \\\"form-control\\\"  formControlName=\\\"GroupName\\\">\\n                    <option value=\\\"\\\">Choose your Group</option>\\n                    <option *ngFor = \\\"let grp of grpName\\\" [(ngValue)]=\\\"grp\\\"  [value]=\\\"grp.id\\\">{{grp.groupName}}</option>\\n                 </select>\\n            </label>\\n        </div>  \\n            <div class=\\\"form-group\\\">\\n                <label>\\n                    Paid by:\\n                </label>\\n                <div *ngFor=\\\"let name of allUser\\\">\\n                    <input type=\\\"radio\\\" formControlName=\\\"Paidby\\\" [value]=\\\"name.userId\\\">{{name.memberName}}\\n                </div>\\n            </div>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n            <button type=\\\"submit\\\" [disabled]=\\\"!profileForm.valid\\\">Submit</button>\\n    </div>\\n</form>\\n\"","export default \"<!-- <p>add-group works</p> -->\\n<form [formGroup]=\\\"profileForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n        <div class=\\\"panel-body\\\">\\n            <div class=\\\"form-group\\\">\\n                <label>\\n                Name:\\n                <input type=\\\"text\\\" formControlName=\\\"Name\\\" placeholder=\\\"Enter the Group Name\\\">\\n                </label>\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n                <label>\\n                Date:\\n                <input type=\\\"date\\\" formControlName=\\\"Date\\\">\\n                </label>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n                <label>\\n                    Category:\\n                </label><br>\\n                <div *ngFor=\\\"let c of Categories\\\">\\n                    <input type=\\\"radio\\\" formControlName=\\\"Category\\\" value={{c.categoryId}}>{{c.name}}<br>\\n                </div>  \\n        </div>\\n        <div class=\\\"form-group\\\">\\n                <button type=\\\"submit\\\" [disabled]=\\\"!profileForm.valid\\\">Submit</button>\\n            </div>\\n</form>\\n\\n\"","export default \"<p>add-members works</p>\\n\\n<div class=\\\"well\\\">\\n    <div [formGroup]=\\\"profileForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n        <div formArrayName=\\\"Members\\\" *ngFor=\\\"let m of profileForm.get('Members').controls;let i=index\\\">\\n                <div [formGroupName]=\\\"i\\\">\\n                        <div class=\\\"form-group\\\">\\n                                <label>\\n                                    Name:\\n                                </label>\\n                                <input type=\\\"text\\\" formControlName=\\\"Name\\\">\\n                            </div>\\n                </div>\\n            </div>\\n        <button type=\\\"button\\\" (click)=\\\"AddFriends()\\\">Add Friends</button>\\n    </div>\\n</div>\\n<div>\\n    <button class=\\\"success\\\" (click)=\\\"submit()\\\">Add</button>\\n</div>\\n\\n\"","export default \"<p>edit-expense works!</p>\\n\\n<form [formGroup]=\\\"profileForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n    <div class=\\\"panel-body\\\">\\n        <div class=\\\"form-group\\\">\\n            <label>\\n            Cost:\\n            <input type=\\\"number\\\" formControlName=\\\"Cost\\\">\\n            </label>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n                <label>\\n                Description:\\n                <input type=\\\"text\\\" formControlName=\\\"Description\\\">\\n                </label>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n                <label>\\n                Date:\\n                <input type=\\\"date\\\" formControlName=\\\"Date\\\">\\n                </label>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label>\\n                Split:\\n            </label>\\n            <input type=\\\"radio\\\" formControlName=\\\"Split\\\" value=\\\"equally\\\">Equally\\n            <input type=\\\"radio\\\" formControlName=\\\"Split\\\" value=\\\"Unequally\\\">Unequally\\n        </div> \\n        <!-- <div class=\\\"well\\\">\\n            <div formArrayName=\\\"MembersExpense\\\" *ngFor=\\\"let m of profileForm.get('MembersExpense').controls;let i=index\\\">\\n                <div [formGroupName]=\\\"i\\\">\\n                    <label>\\n                        Name\\n                    </label>\\n                        <input type =\\\"text\\\"  formControlName=\\\"Name\\\" >\\n                        <label>\\n                            Price\\n                        </label>            \\n                        <input type=\\\"number\\\"  formControlName=\\\"Price\\\">\\n                </div>\\n            </div>\\n            <button type=\\\"button\\\" (click)=\\\"AddMembers()\\\">Add Members</button>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n            <label>\\n              GroupName:\\n              <select (change)=\\\"onChange($event.target.value)\\\" class = \\\"form-control\\\"  formControlName=\\\"GroupName\\\">\\n                    <option value=\\\"\\\">Choose your Group</option>\\n                    <option *ngFor = \\\"let grp of grpName\\\" [(ngValue)]=\\\"grp\\\"  [value]=\\\"grp.id\\\">{{grp.groupName}}</option>\\n                 </select>\\n            </label>\\n        </div>  \\n            <div class=\\\"form-group\\\">\\n                <label>\\n                    Paid by:\\n                </label>\\n                <div *ngFor=\\\"let name of allUser\\\">\\n                    <input type=\\\"radio\\\" formControlName=\\\"Paidby\\\" [value]=\\\"name.userId\\\">{{name.memberName}}\\n                </div>\\n            </div> -->\\n    </div>\\n    <div class=\\\"form-group\\\">\\n            <button type=\\\"submit\\\" [disabled]=\\\"!profileForm.valid\\\">Submit</button>\\n    </div>\\n</form>\\n\\n\\n\"","export default \"<p>group-dashboard works!</p>\\n<p>GroupName:{{group.groupName}}</p>\\n<p>Added by:{{group.createrExpense}}</p>\\n<p>Category:{{group.categoryName}}</p>\\n<!-- <p>Total Amount:{{group.totalAmount}}</p> -->\\n<p>Date:{{group.date}}</p>\\n<!-- <p>Paid by:{{group.expensePaidBy}}</p> -->\\n\\n<table class=\\\"table\\\">\\n    <tr>\\n        <th>Name</th>\\n        <th>Amount</th>\\n        <th>Description</th>\\n        <th>Paid by</th>\\n    </tr>\\n    <tr tr *ngFor=\\\"let bill of groupExpense\\\">\\n        <td>{{bill?.expenseUserName}}</td>\\n        <td>{{bill?.splitAmount}}</td>\\n        <td>{{bill.description}}</td>\\n        <td>{{bill.expensePaidBy}}</td>\\n    </tr>\\n</table>\\n<div class=\\\"form-group\\\">\\n\\n<td><button class=\\\"btn btn-success friend-btn\\\" (click)=\\\"Delete()\\\">Delete</button></td>\\n\\n<!-- <td><button class=\\\"btn btn-success friend-btn\\\" (click)=\\\"Edit()\\\">Edit</button></td> -->\\n\\n</div>\\n\\n\\n\\n\\n\\n\"","export default \"<p>showmembers works!</p>\\n\\n<table class=\\\"table\\\">\\n    <tr>\\n        <th>Name</th>\\n        <th>Created Date</th>\\n    </tr>\\n    <tr *ngFor=\\\"let m of members\\\">\\n        <td>{{m.memberName}}</td>\\n        <td>{{m.createdDate}}</td>\\n    </tr>\\n</table>\\n\\n\"","export class Group{\r\n    id:number;\r\n    groupName:string;\r\n    debt:boolean;\r\n    createdDate:Date;\r\n    categoryId:number;\r\n    creatorId:string;\r\n}","export class GroupExpenseAC{\r\n    splitamount:number;\r\n    description:number;\r\n    createrExpense:string;\r\n    totalAmount:number;\r\n    date:Date;\r\n    groupName:string;\r\n    categoryName:string;\r\n    createrGroupName:string;\r\n    expensePaidBy:string\r\n    expenseUserName:string\r\n}","import { Members } from './Members';\r\n\r\nexport class GroupExpenseData{\r\n    id:number;\r\n    CreaterId:string;\r\n    Description:string;\r\n    Cost:number;\r\n    GrpId:number;\r\n    PaidbyId:string;\r\n    Date:Date;\r\n    Split:string;\r\n    GroupUsersExpenses:Array<Members>;\r\n}\r\n","export class GroupMembersAC{\r\n    grpid:number;\r\n    userId:Array<string>;\r\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2dyb3VwL2FkZC1ncm91cC1leHBlbnNlL2FkZC1ncm91cC1leHBlbnNlLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, FormArray } from '@angular/forms';\nimport { UserServiceService } from '../../user/user-service.service';\nimport { Group } from 'src/app/Shared/Group';\nimport { ApplicationUserAC } from 'src/app/Shared/ApplicationUserAC';\nimport { GroupMembersAC } from '../../Shared/GroupMembersAC';\nimport { GroupMemberDetailsAC } from '../../Shared/GroupMemberDetailsAC';\nimport { GroupExpenseData } from '../../Shared/GroupExpenseData';\nimport { Members } from '../../Shared/Members';\nimport {Location} from '@angular/common';\n\n\n@Component({\n  selector: 'app-add-group-expense',\n  templateUrl: './add-group-expense.component.html',\n  styleUrls: ['./add-group-expense.component.css']\n})\nexport class AddGroupExpenseComponent implements OnInit {\n  user:ApplicationUserAC;\n  grpName:Group[];\n  allUser:Array<GroupMemberDetailsAC>=[];\n  groupExpense:GroupExpenseData;\n  ID:number;\n  member:Members;\n  constructor(private service:UserServiceService,private fb:FormBuilder,private _location: Location) {\n    this.getCurrentUser();\n    this.groupExpense = new GroupExpenseData();\n    this.groupExpense.GroupUsersExpenses=new Array<Members>();\n   }\n  profileForm:FormGroup;\n\n  ngOnInit() {\n    this.profileForm = this.fb.group({\n      Cost:[''],\n      Description: [''],\n      Date:[''],\n      Split: [''],\n      GroupName:[''],\n      Paidby:[''],\n      MembersExpense:this.fb.array([\n        this.addMembersFormGroup()\n      ])\n    })\n  }\n  addMembersFormGroup():FormGroup{\n    return this.fb.group({\n      Name:[''],\n      Price: ['']\n    });\n  }\n  AddMembers():void{\n    (<FormArray>this.profileForm.get('MembersExpense')).push(this.addMembersFormGroup());\n  }\n  deleteMembers(index) {\n    (<FormArray>this.profileForm.get('MembersExpense')).removeAt(index);\n  }\n\n  getCurrentUser(): void{\n    this.service.username().subscribe(u=>\n      {\n        this.user=u;\n        this.getGroups(this.user.id);\n      });\n    }\n    getGroups(id:string)\n    {\n      // this.service.getallGroups(id).subscribe(res=>{\n      //   this.grpName=res;\n      // })\n      this.service.getGroupsofUser(id).subscribe(res=>{\n          this.grpName=res;\n        })\n\n    }\n   \n    onSubmit()\n    {\n      // console.log(this.profileForm.value);\n      // console.log(this.profileForm.get('MembersExpense').value);\n      // this.profileForm.get('MembersExpense').value.forEach(element => {\n      //   console.log(element.Name)\n        \n      // });\n      this.groupExpense.Cost=this.profileForm.get('Cost').value;\n      this.groupExpense.CreaterId=this.user.id;\n      this.groupExpense.Date=this.profileForm.get('Date').value;\n      this.groupExpense.Description=this.profileForm.get('Description').value\n      this.groupExpense.GrpId=this.ID;\n      this.groupExpense.PaidbyId=this.profileForm.get('Paidby').value;\n      this.groupExpense.Split=this.profileForm.get('Split').value;\n      this.profileForm.get('MembersExpense').value.forEach(element => {\n        this.allUser.forEach(user => {\n          if(user.memberName==element.Name)\n          {\n            this.member=new Members();\n            this.member.Amount=element.Price;\n            this.member.userId=user.userId;\n            this.groupExpense.GroupUsersExpenses.push(this.member);\n          }\n        });\n      });\n      this.service.createExpense(this.groupExpense).subscribe(res=>{\n        this._location.back()\n      })\n      }\n    onChange(id:number) {\n      this.ID=id;\n      this.allUser=new Array<GroupMemberDetailsAC>();\n      this.service.getallMembers(id).subscribe(res=>{\n        res.forEach(element => {\n          this.allUser.push(element);\n        });\n        console.log(this.allUser);\n      })\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2dyb3VwL2FkZC1ncm91cC9hZGQtZ3JvdXAuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { UserServiceService } from '../../user/user-service.service';\nimport { FormGroup, FormBuilder } from '@angular/forms';\nimport { Group } from '../../Shared/Group';\nimport { ApplicationUserAC } from '../../Shared/ApplicationUserAC';\nimport { Category } from '../../Shared/Category';\n\n\n@Component({\n  selector: 'app-add-group',\n  templateUrl: './add-group.component.html',\n  styleUrls: ['./add-group.component.css']\n})\nexport class AddGroupComponent implements OnInit {\n\n  Categories:Category[];\n  profileForm:FormGroup;\n  group:Group;\n  user:ApplicationUserAC;\n  constructor(private service :UserServiceService,private fb:FormBuilder) {\n    this.getCategory();\n    this.group=new Group();\n    this.getCurrentUser();\n\n   }\n\n  ngOnInit() {\n    this.profileForm=this.fb.group({\n      Name:[''],\n      Date:[''],\n      Category:['']\n    })\n  }\n  onSubmit()\n  {\n    this.group.categoryId=this.profileForm.get('Category').value\n    this.group.createdDate=this.profileForm.get('Date').value\n    this.group.debt=false;\n    this.group.groupName=this.profileForm.get('Name').value;\n    this.group.creatorId=this.user.id;\n    this.service.createGroups(this.group).subscribe(res=>{\n      console.log(res);\n    }\n    )\n    //console.log(this.profileForm.get('Category').value);\n\n  }\n  getCategory():void\n  {\n    this.service.getCategory().subscribe(res=>\n    {\n      this.Categories=res;\n    });\n  }\n  getCurrentUser(): void{\n    this.service.username().subscribe(u=>\n      {\n        this.user=u;\n      });\n    }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2dyb3VwL2FkZC1tZW1iZXJzL2FkZC1tZW1iZXJzLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { UserServiceService } from 'src/app/user/user-service.service';\nimport { FormBuilder, FormGroup, FormArray } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { ApplicationUserAC } from 'src/app/Shared/ApplicationUserAC';\nimport { GroupMembersAC } from 'src/app/Shared/GroupMembersAC';\nimport {Location} from '@angular/common';\nimport { Group } from 'src/app/Shared/Group';\nimport { GroupMembers } from '../../Shared/GroupMembers';\n\n\n\n@Component({\n  selector: 'app-add-members',\n  templateUrl: './add-members.component.html',\n  styleUrls: ['./add-members.component.css']\n})\nexport class AddMembersComponent implements OnInit {\n  user:ApplicationUserAC[];\n  FormArray: Array<string> = [];\n  members:GroupMembersAC;\n  id:number;\n  Grp:Array<GroupMembersAC>=[];\n  allmembers:Array<GroupMembers>=[];\n  memberID:Array<string>=[];\n\n  constructor(private service:UserServiceService,private fb:FormBuilder,private router:Router,private route:ActivatedRoute,private _location: Location) {\n    this.getAllUser();\n    this.members=new GroupMembersAC();\n    this.id=+this.route.snapshot.paramMap.get('id');\n  \n   }\n   profileForm:FormGroup;\n\n   ngOnInit() {\n    this.profileForm=this.fb.group({\n      Members:this.fb.array([\n        this.addFriendsGroup()\n      ])\n    })\n  }\n  addFriendsGroup():FormGroup\n  {\n    return this.fb.group({\n      Name:['']\n    });\n  }\n  AddFriends()\n  {\n    (<FormArray>this.profileForm.get('Members')).push(this.addFriendsGroup());\n  }\n  // getCurrentUser(): void{\n  //   this.service.username().subscribe(u=>\n  //     {\n  //       this.currentUser=u;\n  //       this.getAllUser();\n  //       this.getAllMembers(this.id);\n  //     });\n  //   }\n\n  getAllUser():void{\n    this.service.getAllUser().subscribe(u=>{\n     this.user=u;\n     this.getAllMembers(this.id);\n    });\n    }\n\n    getAllMembers(id:number)\n    {\n      this.service.getallMembers(id).subscribe(res=>{\n        res.forEach(element => {\n          this.memberID.push(element.userId);          \n        });\n        console.log(this.memberID);\n      }\n      )\n    }\n\n    submit()\n    {\n      // console.log(this.profileForm.get('Members').value);\n      this.profileForm.get('Members').value.forEach(element => {\n          this.user.forEach(u => {\n            if(element.Name==u.name)\n            {\n              if(!this.FormArray.some(x=>x==u.id) && !this.memberID.some(x=>x==u.id))\n              {\n              this.FormArray.push(u.id);\n              }\n            }\n          });\n      });     \n      // console.log(id);\n      console.log(this.FormArray);\n      this.members.grpid=this.id;\n      this.members.userId=this.FormArray;\n      if(this.members.userId.length==0)\n      {\n        alert(\"enter valid details\");        \n      }\n      else{\n      this.service.addGroupMembersList(this.members).subscribe(res=>\n        this._location.back()\n      )\n    }\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2dyb3VwL2VkaXQtZXhwZW5zZS9lZGl0LWV4cGVuc2UuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder } from '@angular/forms';\n\n@Component({\n  selector: 'app-edit-expense',\n  templateUrl: './edit-expense.component.html',\n  styleUrls: ['./edit-expense.component.css']\n})\nexport class EditExpenseComponent implements OnInit {\n  profileForm:FormGroup;\n\n  constructor(private fb:FormBuilder) { }\n\n  ngOnInit() {\n    this.profileForm=this.fb.group({\n      Cost:[''],\n      Description: [''],\n      Date:[''],\n      Split: ['']\n    })\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2dyb3VwL2dyb3VwLWRhc2hib2FyZC9ncm91cC1kYXNoYm9hcmQuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { UserServiceService } from '../../user/user-service.service';\nimport { GroupExpenseAC } from '../../Shared/GroupExpenseAC';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ApplicationUserAC } from '../../Shared/ApplicationUserAC';\n\n@Component({\n  selector: 'app-group-dashboard',\n  templateUrl: './group-dashboard.component.html',\n  styleUrls: ['./group-dashboard.component.css']\n})\nexport class GroupDashboardComponent implements OnInit {\n  groupExpense:GroupExpenseAC[];\n  group:GroupExpenseAC;\n  id:number;\n  groupName:string;\n  user: ApplicationUserAC;\n  createrGroupName:string;\n  \n\n  constructor(private service:UserServiceService,private route:ActivatedRoute,private router:Router) {\n    this.id=+this.route.snapshot.paramMap.get('id');\n    this.GetGroupId(this.id);\n    this.getcurrentUser();\n    this.group=new GroupExpenseAC();\n   }\n\n  ngOnInit() {\n  }\n  GetGroupId(id:number)\n  {\n    this.service.GetGroupId(id).subscribe(res=>{\n      this.groupExpense=res;\n      console.log(this.groupExpense);\n      this.group.groupName=this.groupExpense[0].groupName\n      this.group.createrExpense=this.groupExpense[0].createrExpense;\n      this.group.categoryName=this.groupExpense[0].categoryName;\n      this.group.totalAmount=this.groupExpense[0].totalAmount;\n      this.group.date=this.groupExpense[0].date;\n      this.group.expensePaidBy=this.groupExpense[0].expensePaidBy;\n      this.createrGroupName=this.groupExpense[0].createrGroupName;\n    })\n  }\n  getcurrentUser(){\n    this.service.username().subscribe(res=>{\n      this.user=res;\n    })\n  }\n  Delete()\n  {\n    alert(\"deleted the Group Expense\");\n    const id=+this.route.snapshot.paramMap.get('id');\n\n    this.service.Delete(id).subscribe(res=>\n    {\n      this.router.navigate(['']); \n    })\n  }\n  Edit()\n  {\n    const id=+this.route.snapshot.paramMap.get('id'); \n    this.router.navigate(['Groups/Edit',id]);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AddGroupComponent } from './add-group/add-group.component';\nimport { AddMembersComponent } from './add-members/add-members.component';\nimport { AddFriendExpenseComponent } from '../user/add-friend-expense/add-friend-expense.component';\nimport { AddGroupExpenseComponent } from './add-group-expense/add-group-expense.component';\nimport { GroupDashboardComponent } from './group-dashboard/group-dashboard.component';\nimport { ShowmembersComponent } from './showmembers/showmembers.component';\nimport { componentFactoryName } from '@angular/compiler';\nimport { EditExpenseComponent } from './edit-expense/edit-expense.component';\n\n\nconst routes: Routes = [\n  {\n  path:'',\n  component:AddGroupComponent\n  },\n  {\n    path:'AddMembers/:id',\n    component:AddMembersComponent\n  },\n  {\n    path:'GroupExpense',\n    component:AddGroupExpenseComponent\n  },\n  {\n    path:'GroupDashboard/:id',\n    component:GroupDashboardComponent\n  },\n  {\n    path:'ShowMembers/:id',\n    component:ShowmembersComponent\n  },\n  {\n    path:'Edit/:id',\n    component:EditExpenseComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class GroupRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { GroupRoutingModule } from './group-routing.module';\nimport { AddGroupComponent } from './add-group/add-group.component';\nimport { AddGroupExpenseComponent } from './add-group-expense/add-group-expense.component';\nimport { AddMembersComponent } from './add-members/add-members.component';\nimport { GroupDashboardComponent } from './group-dashboard/group-dashboard.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ShowmembersComponent } from './showmembers/showmembers.component';\nimport { EditExpenseComponent } from './edit-expense/edit-expense.component';\n\n\n@NgModule({\n  declarations: [AddGroupComponent, AddGroupExpenseComponent, AddMembersComponent, GroupDashboardComponent, ShowmembersComponent,EditExpenseComponent],\n  imports: [\n    CommonModule,\n    GroupRoutingModule,\n    FormsModule,\n    ReactiveFormsModule\n  ]\n})\nexport class GroupModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2dyb3VwL3Nob3dtZW1iZXJzL3Nob3dtZW1iZXJzLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { UserServiceService } from '../../user/user-service.service';\nimport { GroupMemberDetailsAC } from '../../Shared/GroupMemberDetailsAC';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-showmembers',\n  templateUrl: './showmembers.component.html',\n  styleUrls: ['./showmembers.component.css']\n})\nexport class ShowmembersComponent implements OnInit {\n\n  id:number;\n  members:Array<GroupMemberDetailsAC>=[];\n  constructor(private service :UserServiceService,private route:ActivatedRoute) { \n    this.id=+this.route.snapshot.paramMap.get('id');\n    this.getallMembers(this.id);\n  }\n\n  ngOnInit() {\n  }\n  getallMembers(id:number){\n    this.service.getallMembers(id).subscribe(res=>{\n    this.members=res;\n    console.log(this.members)\n  })\n    }\n}\n"],"sourceRoot":"webpack:///"}